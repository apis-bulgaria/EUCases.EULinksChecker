@{
    ViewBag.Title = "EULinksChecker web service";
}

<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/jquery.fileupload.css" rel="stylesheet" />
<link href="~/Content/jquery.fileupload-ui.css" rel="stylesheet" />
<script src="~/Scripts/vendor/jquery.ui.widget.js"></script>
<script src="~/Scripts/fileupload/jquery.iframe-transport.js"></script>
<script src="~/Scripts/fileupload/jquery.fileupload.js"></script>
<script src="~/Scripts/fileupload/jquery.fileupload-ui.js"></script>
<script src="~/Scripts/fileupload/jquery.fileupload-process.js"></script>
<script src="~/Scripts/fileupload/jquery.fileupload-validate.js"></script>
<link href="~/Content/spinner.css" rel="stylesheet" />

<br />
<br />
<br />
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Recognition and highlighting of references to EU legislation and case law in PDF files</h3>
        </div>
        <div class="panel panel-body">
            <br />
            <div class="row">
                <div class="col-lg-12">
                    EULinksChecker can recognise and insert links to EU legislation and case law in PDF files. Please upload or provide a link to the URL of a PDF file containing legal citations to EU law, and EULinksChecker will insert links in the text. You can then download the PDF file with the inserted links.
                </div>
            </div>
            <br />

            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#fromFile" aria-controls="home" role="tab" data-toggle="tab">Upload PDF file</a></li>
                <li role="presentation"><a href="#fromUrl" aria-controls="profile" role="tab" data-toggle="tab">Provide link to URL of PDF file</a></li>
            </ul>

            <div class="tab-content">
                <div role="tabpanel" class="tab-pane fade in active" id="fromFile">
                    <br />
                    <div class="row">
                        <div class="col-lg-6">
                            <span class="btn btn-success fileinput-button">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add file...</span>
                                <!-- The file input field used as target for the file upload widget -->
                                <input id="fileupload" type="file" name="file">
                            </span>
                            <br>
                            <br>
                        </div>
                        <div class="col-lg-6">
                            <!-- The container for the uploaded files -->
                            <div id="files" class="files"></div>
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane fade" id="fromUrl">
                    <br />
                    <div class="row">
                        <div class="col-lg-4">
                            <span class="btn btn-success fileinput-button" id="pdfUrlAddButton">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add url...</span>
                            </span>
                        </div>
                    </div>
                    <br>
                    <br>
                    <div id="urlHolder">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        urlCount = 0;
        $('#pdfUrlAddButton').on('click', function () {
            urlCount++;
            var el = '<div class="row">' +
                      '<div class="col-lg-6">' +
                        '<form class="form-inline">' +
                           '<div class="form-group">' +
                             '<input class="form-control" type="url" id="pdfUrlInput' + urlCount + '" style="max-width:550px;width:450px" />' +
                           '</div>' +
                           '<button id="pdfUrlButton' + urlCount + '" class="btn btn-info">Link pdf</button>' +
                        '</form>' +
                      '</div>' +
                      '<div class="col-lg-6" id="donloadUrlHolder' + urlCount + '">' +
                      '</div>' +
                    '</div>';

            $('#urlHolder').append($(el));
            InitButtonAndInput(urlCount)
        });

        divSpinner = $('<div class="spinner-loader" />');
        function InitButtonAndInput(c) {
            $('#pdfUrlButton' + c).on('click', function () {
                $('#pdfUrlInput' + c).prop('disabled', true)
                $('#pdfUrlButton' + c).prop('disabled', true)

                $('#donloadUrlHolder' + c).append(divSpinner);

                var pdfUrl = $('#pdfUrlInput' + c).val();
                $.ajax({
                    method: "POST",
                    url: "/Home/LinkFromUrl/",
                    data: { url: pdfUrl }
                }).done(function (result) {
                    $.each(result.files, function (index, file) {
                        if (file.url) {
                            var link = $('<a class="btn btn-default">')
                                .attr('target', '_blank')
                                .prop('href', file.url)
                                .html('Download ' + file.name);

                            var container = $('<div/>').append(link)
                            $('#donloadUrlHolder' + c).append(container);
                        } else if (file.error) {
                            var error = $('<span class="text-danger"/>').text(file.error);
                            $('#donloadUrlHolder' + c)
                                .append(error);
                        }
                    });
                    divSpinner.remove();
                }).fail(function (data) {
                    $.each(data.files, function (index) {
                        var error = $('<span class="text-danger"/>').text('File upload failed.');
                        $('#donloadUrlHolder' + urlCount)
                            .append(error);
                    });
                });
            });
        };

        uploadButton = $('<button/>')
        .addClass('btn btn-primary')
        .prop('disabled', true)
        .text('Processing...')
        .on('click', function () {
            // $('#files').append(divSpinner);
            var $this = $(this),
                data = $this.data();
            $this
                .off('click')
                .text('Abort')
                .on('click', function () {
                    $this.remove();
                    data.abort();
                });
            data.submit().always(function () {
                $this.remove();
            });
        });
        var url = "/Home/UploadFile/";
        $('#fileupload').fileupload({
            url: url,
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(pdf)$/i,
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div/>').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>')
                        .append($('<span/>').text(file.name));
                if (!index) {
                    node
                        .append('<br>')
                        .append(uploadButton.clone(true).data(data));
                }
                node.appendTo(data.context);
            });
        }).on('fileuploadprocessalways', function (e, data) {
            var index = data.index,
                file = data.files[index],
                node = $(data.context.children()[index]);
            if (file.preview) {
                node
                    .prepend('<br>')
                    .prepend(file.preview);
            }
            if (file.error) {
                node
                    .append('<br>')
                    .append($('<span class="text-danger"/>').text(file.error));
            }
            if (index + 1 === data.files.length) {
                data.context.find('button')
                    .text('Upload')
                    .prop('disabled', !!data.files.error);
            }
        }).on('fileuploaddone', function (e, data) {
            divSpinner.remove();
            $.each(data.result.files, function (index, file) {
                if (file.url) {
                    var link = $('<a class="btn btn-default">')
                        .attr('target', '_blank')
                        .prop('href', file.url)
                        .html('Download ' + file.name);

                    var container = $('<div/>').append(link)
                    $('#files').append(container);
                } else if (file.error) {
                    var error = $('<span class="text-danger"/>').text(file.error);
                    $('#files')
                        .append('<br>')
                        .append(error);
                }

            });
        }).on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
            });
        }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
</script>
